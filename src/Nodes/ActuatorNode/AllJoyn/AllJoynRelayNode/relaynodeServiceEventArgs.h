//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace digital { namespace pervasive { namespace sample { namespace relaynode {

// Methods
public ref class relaynodeSetStateCalledEventArgs sealed
{
public:
    relaynodeSetStateCalledEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ int32 interfaceMemberRelayId, _In_ byte interfaceMemberState);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property relaynodeSetStateResult^ Result
    {
        relaynodeSetStateResult^ get() { return m_result; }
        void set(_In_ relaynodeSetStateResult^ value) { m_result = value; }
    }

    property int32 RelayId
    {
        int32 get() { return m_interfaceMemberRelayId; }
    }

    property byte State
    {
        byte get() { return m_interfaceMemberState; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<relaynodeSetStateResult^>^ GetResultAsync(relaynodeSetStateCalledEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<relaynodeSetStateResult^>
        {
            return t;
        });
    }
    
private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<relaynodeSetStateResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    relaynodeSetStateResult^ m_result;
    int32 m_interfaceMemberRelayId;
    byte m_interfaceMemberState;
};

// Readable Properties
// Writable Properties
} } } } 
